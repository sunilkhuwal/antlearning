<?xml version = "1.0"?>
<project name = "Hello World Project" default = "info" >
	<target name = "info">
		<echo>Hello world - welcome to the ant tutorial </echo>
	</target>

	<!-- Setting custom properties -->
	<property name = "sitename" value = "https://sunilkhuwal.wordpress.com/2017/06/04/3ds-restro-lounge-visit/"/>
	<target name = "siteInfo">
		<echo>Apache Ant version is ${ant.version} - You are at ${sitename} </echo>
	</target>

	<property file = "build.properties"/>
	<!-- Using external properties file-->
	<target name="siteInfoUsingPropertyFile">
		<echo>Build Version of this demo project is : ${buildversion}</echo>
		<echo>You are at ${sitename}</echo>
	</target>
	
	
	<!-- Printing predefined properties of ant -->
	<target name = "preDefinedPropertiesOfAnt">
		<antcall target="siteInfo"/>
		
		<echo>Pre defined properties of Ant is here</echo>
		<echo>The full location of the build file --> ${ant.file}</echo>
		<echo>The basedir of the build, as specified in the basedir attribute of the project element--> ${basedir}</echo>
		<echo>The version of the JDK that is used by Ant --> ${ant.java.version}</echo>
		<echo>The name of the project, as specified in the name atrribute of the project element --> ${ant.project.name}</echo>
		<echo>The default target of the current project --> ${ant.project.default-target} </echo>
		<echo>Comma separated list of the targets that were invoked in the current project --> ${ant.project.invoked-targets}</echo>
		<echo>The full location of the Ant jar file --> ${ant.core.lib}</echo>
		<echo>The home directory of ant installation --> ${ant.home}</echo>
		<echo>The home directory for Ant library files - typically ANT_HOME/lib folder --> ${ant.library.dir}</echo>
	</target>

	<!-- Example of files
		0: casesensitive = yes 
		1: Includes file ends with .java
		2: Exclues file containing Stubs

		Note: ? − Matches one character only.
		* − Matches zero or many characters.
		** − Matches zero or many directories recursively.

		In the below example  Samplestub.java  will not be excluded as we are excluding the file containing 'Stub' as string 
	-->
	<fileset dir = "${src}" casesensitive = "yes">
		<include name = "**/*.java"/>
		<exclude name = "**/*Stub*"/>
	</fileset>

	<patternset id="java.files.without.stub">
		<include name="src/**/*.java"/>
		<exclue name="src/**/*Stub*"/>
	</pattternset>

	<fileset dir = ${src} casesensitive="yes">
		<patternset id="java.files.without.stub"/>
	</fileset>

	<!-- Note:
		- filelist contains explicitly named lists of files and it does not support wild cards.
		- filelist data type can be applied for existing or non-existing files.
	-->
	<filelist id = "config.files" dir = "${webapp.src.folder}">
		<file name = "applicationConfig.xml"/>
		<file name = "faces-config.xml"/>
		<file name = "web.xml"/>
		<file name = "portlet.xml"/>
	</filelist>

	<!-- Notes:
		- The attribute output.dir points to the output folder of the project.
		- The attribute releasenotes.dir points to the release notes folder of the project.
		- The attribute current.version points to the current version folder of the project.
		- The copy task, as the name suggests, is used to copy files from one location to another.
	-->
	<copy todir = "${output.dir}">
		<fileset dir = "${releasenotes.dir}" includes = "**/*.txt"/>
		<filterset>
			<filter token = "VERSION" value = "${current.version}"/>
		</filterset>
	</copy>

	<!-- Notes:
		- The attribute env.J2EE_HOME points to the environment variable J2EE_HOME.
		- The attribute j2ee.jar points to the name of the J2EE jar file in the J2EE base folder.
	-->
	<path id = "build.classpath.jar">
		<pathelement path = "${env.J2EE_HOME}/${j2ee.jar}"/>
		<fileset dir = "lib">
			<include name = "**/*.jar"/>
		</fileset>
	</path>
</project>